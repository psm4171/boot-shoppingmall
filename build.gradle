plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.psm'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0' // Jakarta Persistence API의 버전을 지정
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // 아래는 jwt를 위한 라이브러리 추가 내용
    // jwts 라이브러리
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //gson - json 메시지를 다루기 위한 라이브러리
    implementation 'com.google.code.gson:gson'

    // dto validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

   // implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'



     implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'

    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly 'com.mysql:mysql-connector-j' // mySQL
}

tasks.named('test') {
    useJUnitPlatform()
}
